// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/riakclient.proto

package com.basho.riak.pbc;

public final class RPB {
  private RPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RpbErrorResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbErrorResp.newBuilder() to construct.
    private RpbErrorResp() {
      initFields();
    }
    private RpbErrorResp(boolean noInit) {}
    
    private static final RpbErrorResp defaultInstance;
    public static RpbErrorResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbErrorResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbErrorResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbErrorResp_fieldAccessorTable;
    }
    
    // required bytes errmsg = 1;
    public static final int ERRMSG_FIELD_NUMBER = 1;
    private boolean hasErrmsg;
    private com.google.protobuf.ByteString errmsg_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasErrmsg() { return hasErrmsg; }
    public com.google.protobuf.ByteString getErrmsg() { return errmsg_; }
    
    // required uint32 errcode = 2;
    public static final int ERRCODE_FIELD_NUMBER = 2;
    private boolean hasErrcode;
    private int errcode_ = 0;
    public boolean hasErrcode() { return hasErrcode; }
    public int getErrcode() { return errcode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasErrmsg) return false;
      if (!hasErrcode) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasErrmsg()) {
        output.writeBytes(1, getErrmsg());
      }
      if (hasErrcode()) {
        output.writeUInt32(2, getErrcode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasErrmsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getErrmsg());
      }
      if (hasErrcode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getErrcode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbErrorResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbErrorResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbErrorResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbErrorResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbErrorResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbErrorResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbErrorResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbErrorResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbErrorResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbErrorResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbErrorResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbErrorResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbErrorResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbErrorResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbErrorResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbErrorResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbErrorResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbErrorResp.getDefaultInstance()) return this;
        if (other.hasErrmsg()) {
          setErrmsg(other.getErrmsg());
        }
        if (other.hasErrcode()) {
          setErrcode(other.getErrcode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setErrmsg(input.readBytes());
              break;
            }
            case 16: {
              setErrcode(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required bytes errmsg = 1;
      public boolean hasErrmsg() {
        return result.hasErrmsg();
      }
      public com.google.protobuf.ByteString getErrmsg() {
        return result.getErrmsg();
      }
      public Builder setErrmsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrmsg = true;
        result.errmsg_ = value;
        return this;
      }
      public Builder clearErrmsg() {
        result.hasErrmsg = false;
        result.errmsg_ = getDefaultInstance().getErrmsg();
        return this;
      }
      
      // required uint32 errcode = 2;
      public boolean hasErrcode() {
        return result.hasErrcode();
      }
      public int getErrcode() {
        return result.getErrcode();
      }
      public Builder setErrcode(int value) {
        result.hasErrcode = true;
        result.errcode_ = value;
        return this;
      }
      public Builder clearErrcode() {
        result.hasErrcode = false;
        result.errcode_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbErrorResp)
    }
    
    static {
      defaultInstance = new RpbErrorResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbErrorResp)
  }
  
  public static final class RpbGetClientIdResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetClientIdResp.newBuilder() to construct.
    private RpbGetClientIdResp() {
      initFields();
    }
    private RpbGetClientIdResp(boolean noInit) {}
    
    private static final RpbGetClientIdResp defaultInstance;
    public static RpbGetClientIdResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetClientIdResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetClientIdResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetClientIdResp_fieldAccessorTable;
    }
    
    // required bytes client_id = 1;
    public static final int CLIENT_ID_FIELD_NUMBER = 1;
    private boolean hasClientId;
    private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasClientId() { return hasClientId; }
    public com.google.protobuf.ByteString getClientId() { return clientId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasClientId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClientId()) {
        output.writeBytes(1, getClientId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClientId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClientId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetClientIdResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetClientIdResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetClientIdResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetClientIdResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetClientIdResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetClientIdResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetClientIdResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetClientIdResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetClientIdResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetClientIdResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetClientIdResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetClientIdResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetClientIdResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbGetClientIdResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetClientIdResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetClientIdResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetClientIdResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetClientIdResp.getDefaultInstance()) return this;
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setClientId(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes client_id = 1;
      public boolean hasClientId() {
        return result.hasClientId();
      }
      public com.google.protobuf.ByteString getClientId() {
        return result.getClientId();
      }
      public Builder setClientId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder clearClientId() {
        result.hasClientId = false;
        result.clientId_ = getDefaultInstance().getClientId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetClientIdResp)
    }
    
    static {
      defaultInstance = new RpbGetClientIdResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetClientIdResp)
  }
  
  public static final class RpbSetClientIdReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbSetClientIdReq.newBuilder() to construct.
    private RpbSetClientIdReq() {
      initFields();
    }
    private RpbSetClientIdReq(boolean noInit) {}
    
    private static final RpbSetClientIdReq defaultInstance;
    public static RpbSetClientIdReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbSetClientIdReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbSetClientIdReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbSetClientIdReq_fieldAccessorTable;
    }
    
    // required bytes client_id = 1;
    public static final int CLIENT_ID_FIELD_NUMBER = 1;
    private boolean hasClientId;
    private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasClientId() { return hasClientId; }
    public com.google.protobuf.ByteString getClientId() { return clientId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasClientId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClientId()) {
        output.writeBytes(1, getClientId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClientId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClientId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetClientIdReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbSetClientIdReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbSetClientIdReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbSetClientIdReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbSetClientIdReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbSetClientIdReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbSetClientIdReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbSetClientIdReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbSetClientIdReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbSetClientIdReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbSetClientIdReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbSetClientIdReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbSetClientIdReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbSetClientIdReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbSetClientIdReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbSetClientIdReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbSetClientIdReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbSetClientIdReq.getDefaultInstance()) return this;
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setClientId(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes client_id = 1;
      public boolean hasClientId() {
        return result.hasClientId();
      }
      public com.google.protobuf.ByteString getClientId() {
        return result.getClientId();
      }
      public Builder setClientId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder clearClientId() {
        result.hasClientId = false;
        result.clientId_ = getDefaultInstance().getClientId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbSetClientIdReq)
    }
    
    static {
      defaultInstance = new RpbSetClientIdReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbSetClientIdReq)
  }
  
  public static final class RpbGetServerInfoResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetServerInfoResp.newBuilder() to construct.
    private RpbGetServerInfoResp() {
      initFields();
    }
    private RpbGetServerInfoResp(boolean noInit) {}
    
    private static final RpbGetServerInfoResp defaultInstance;
    public static RpbGetServerInfoResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetServerInfoResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetServerInfoResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetServerInfoResp_fieldAccessorTable;
    }
    
    // optional bytes node = 1;
    public static final int NODE_FIELD_NUMBER = 1;
    private boolean hasNode;
    private com.google.protobuf.ByteString node_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasNode() { return hasNode; }
    public com.google.protobuf.ByteString getNode() { return node_; }
    
    // optional bytes server_version = 2;
    public static final int SERVER_VERSION_FIELD_NUMBER = 2;
    private boolean hasServerVersion;
    private com.google.protobuf.ByteString serverVersion_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasServerVersion() { return hasServerVersion; }
    public com.google.protobuf.ByteString getServerVersion() { return serverVersion_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasNode()) {
        output.writeBytes(1, getNode());
      }
      if (hasServerVersion()) {
        output.writeBytes(2, getServerVersion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasNode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNode());
      }
      if (hasServerVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getServerVersion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetServerInfoResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetServerInfoResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetServerInfoResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetServerInfoResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetServerInfoResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetServerInfoResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetServerInfoResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetServerInfoResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetServerInfoResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetServerInfoResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetServerInfoResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetServerInfoResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetServerInfoResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbGetServerInfoResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetServerInfoResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetServerInfoResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetServerInfoResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetServerInfoResp.getDefaultInstance()) return this;
        if (other.hasNode()) {
          setNode(other.getNode());
        }
        if (other.hasServerVersion()) {
          setServerVersion(other.getServerVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setNode(input.readBytes());
              break;
            }
            case 18: {
              setServerVersion(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional bytes node = 1;
      public boolean hasNode() {
        return result.hasNode();
      }
      public com.google.protobuf.ByteString getNode() {
        return result.getNode();
      }
      public Builder setNode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNode = true;
        result.node_ = value;
        return this;
      }
      public Builder clearNode() {
        result.hasNode = false;
        result.node_ = getDefaultInstance().getNode();
        return this;
      }
      
      // optional bytes server_version = 2;
      public boolean hasServerVersion() {
        return result.hasServerVersion();
      }
      public com.google.protobuf.ByteString getServerVersion() {
        return result.getServerVersion();
      }
      public Builder setServerVersion(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasServerVersion = true;
        result.serverVersion_ = value;
        return this;
      }
      public Builder clearServerVersion() {
        result.hasServerVersion = false;
        result.serverVersion_ = getDefaultInstance().getServerVersion();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetServerInfoResp)
    }
    
    static {
      defaultInstance = new RpbGetServerInfoResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetServerInfoResp)
  }
  
  public static final class RpbGetReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetReq.newBuilder() to construct.
    private RpbGetReq() {
      initFields();
    }
    private RpbGetReq(boolean noInit) {}
    
    private static final RpbGetReq defaultInstance;
    public static RpbGetReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    // required bytes key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional uint32 r = 3;
    public static final int R_FIELD_NUMBER = 3;
    private boolean hasR;
    private int r_ = 0;
    public boolean hasR() { return hasR; }
    public int getR() { return r_; }
    
    // optional uint32 pr = 4;
    public static final int PR_FIELD_NUMBER = 4;
    private boolean hasPr;
    private int pr_ = 0;
    public boolean hasPr() { return hasPr; }
    public int getPr() { return pr_; }
    
    // optional bool basic_quorum = 5;
    public static final int BASIC_QUORUM_FIELD_NUMBER = 5;
    private boolean hasBasicQuorum;
    private boolean basicQuorum_ = false;
    public boolean hasBasicQuorum() { return hasBasicQuorum; }
    public boolean getBasicQuorum() { return basicQuorum_; }
    
    // optional bool notfound_ok = 6;
    public static final int NOTFOUND_OK_FIELD_NUMBER = 6;
    private boolean hasNotfoundOk;
    private boolean notfoundOk_ = false;
    public boolean hasNotfoundOk() { return hasNotfoundOk; }
    public boolean getNotfoundOk() { return notfoundOk_; }
    
    // optional bytes if_modified = 7;
    public static final int IF_MODIFIED_FIELD_NUMBER = 7;
    private boolean hasIfModified;
    private com.google.protobuf.ByteString ifModified_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasIfModified() { return hasIfModified; }
    public com.google.protobuf.ByteString getIfModified() { return ifModified_; }
    
    // optional bool head = 8;
    public static final int HEAD_FIELD_NUMBER = 8;
    private boolean hasHead;
    private boolean head_ = false;
    public boolean hasHead() { return hasHead; }
    public boolean getHead() { return head_; }
    
    // optional bool deletedvclock = 9;
    public static final int DELETEDVCLOCK_FIELD_NUMBER = 9;
    private boolean hasDeletedvclock;
    private boolean deletedvclock_ = false;
    public boolean hasDeletedvclock() { return hasDeletedvclock; }
    public boolean getDeletedvclock() { return deletedvclock_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      if (!hasKey) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      if (hasKey()) {
        output.writeBytes(2, getKey());
      }
      if (hasR()) {
        output.writeUInt32(3, getR());
      }
      if (hasPr()) {
        output.writeUInt32(4, getPr());
      }
      if (hasBasicQuorum()) {
        output.writeBool(5, getBasicQuorum());
      }
      if (hasNotfoundOk()) {
        output.writeBool(6, getNotfoundOk());
      }
      if (hasIfModified()) {
        output.writeBytes(7, getIfModified());
      }
      if (hasHead()) {
        output.writeBool(8, getHead());
      }
      if (hasDeletedvclock()) {
        output.writeBool(9, getDeletedvclock());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKey());
      }
      if (hasR()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getR());
      }
      if (hasPr()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getPr());
      }
      if (hasBasicQuorum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getBasicQuorum());
      }
      if (hasNotfoundOk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getNotfoundOk());
      }
      if (hasIfModified()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getIfModified());
      }
      if (hasHead()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, getHead());
      }
      if (hasDeletedvclock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getDeletedvclock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbGetReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasPr()) {
          setPr(other.getPr());
        }
        if (other.hasBasicQuorum()) {
          setBasicQuorum(other.getBasicQuorum());
        }
        if (other.hasNotfoundOk()) {
          setNotfoundOk(other.getNotfoundOk());
        }
        if (other.hasIfModified()) {
          setIfModified(other.getIfModified());
        }
        if (other.hasHead()) {
          setHead(other.getHead());
        }
        if (other.hasDeletedvclock()) {
          setDeletedvclock(other.getDeletedvclock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
            case 18: {
              setKey(input.readBytes());
              break;
            }
            case 24: {
              setR(input.readUInt32());
              break;
            }
            case 32: {
              setPr(input.readUInt32());
              break;
            }
            case 40: {
              setBasicQuorum(input.readBool());
              break;
            }
            case 48: {
              setNotfoundOk(input.readBool());
              break;
            }
            case 58: {
              setIfModified(input.readBytes());
              break;
            }
            case 64: {
              setHead(input.readBool());
              break;
            }
            case 72: {
              setDeletedvclock(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // required bytes key = 2;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional uint32 r = 3;
      public boolean hasR() {
        return result.hasR();
      }
      public int getR() {
        return result.getR();
      }
      public Builder setR(int value) {
        result.hasR = true;
        result.r_ = value;
        return this;
      }
      public Builder clearR() {
        result.hasR = false;
        result.r_ = 0;
        return this;
      }
      
      // optional uint32 pr = 4;
      public boolean hasPr() {
        return result.hasPr();
      }
      public int getPr() {
        return result.getPr();
      }
      public Builder setPr(int value) {
        result.hasPr = true;
        result.pr_ = value;
        return this;
      }
      public Builder clearPr() {
        result.hasPr = false;
        result.pr_ = 0;
        return this;
      }
      
      // optional bool basic_quorum = 5;
      public boolean hasBasicQuorum() {
        return result.hasBasicQuorum();
      }
      public boolean getBasicQuorum() {
        return result.getBasicQuorum();
      }
      public Builder setBasicQuorum(boolean value) {
        result.hasBasicQuorum = true;
        result.basicQuorum_ = value;
        return this;
      }
      public Builder clearBasicQuorum() {
        result.hasBasicQuorum = false;
        result.basicQuorum_ = false;
        return this;
      }
      
      // optional bool notfound_ok = 6;
      public boolean hasNotfoundOk() {
        return result.hasNotfoundOk();
      }
      public boolean getNotfoundOk() {
        return result.getNotfoundOk();
      }
      public Builder setNotfoundOk(boolean value) {
        result.hasNotfoundOk = true;
        result.notfoundOk_ = value;
        return this;
      }
      public Builder clearNotfoundOk() {
        result.hasNotfoundOk = false;
        result.notfoundOk_ = false;
        return this;
      }
      
      // optional bytes if_modified = 7;
      public boolean hasIfModified() {
        return result.hasIfModified();
      }
      public com.google.protobuf.ByteString getIfModified() {
        return result.getIfModified();
      }
      public Builder setIfModified(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIfModified = true;
        result.ifModified_ = value;
        return this;
      }
      public Builder clearIfModified() {
        result.hasIfModified = false;
        result.ifModified_ = getDefaultInstance().getIfModified();
        return this;
      }
      
      // optional bool head = 8;
      public boolean hasHead() {
        return result.hasHead();
      }
      public boolean getHead() {
        return result.getHead();
      }
      public Builder setHead(boolean value) {
        result.hasHead = true;
        result.head_ = value;
        return this;
      }
      public Builder clearHead() {
        result.hasHead = false;
        result.head_ = false;
        return this;
      }
      
      // optional bool deletedvclock = 9;
      public boolean hasDeletedvclock() {
        return result.hasDeletedvclock();
      }
      public boolean getDeletedvclock() {
        return result.getDeletedvclock();
      }
      public Builder setDeletedvclock(boolean value) {
        result.hasDeletedvclock = true;
        result.deletedvclock_ = value;
        return this;
      }
      public Builder clearDeletedvclock() {
        result.hasDeletedvclock = false;
        result.deletedvclock_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetReq)
    }
    
    static {
      defaultInstance = new RpbGetReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetReq)
  }
  
  public static final class RpbGetResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetResp.newBuilder() to construct.
    private RpbGetResp() {
      initFields();
    }
    private RpbGetResp(boolean noInit) {}
    
    private static final RpbGetResp defaultInstance;
    public static RpbGetResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetResp_fieldAccessorTable;
    }
    
    // repeated .RpbContent content = 1;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private java.util.List<com.basho.riak.pbc.RPB.RpbContent> content_ =
      java.util.Collections.emptyList();
    public java.util.List<com.basho.riak.pbc.RPB.RpbContent> getContentList() {
      return content_;
    }
    public int getContentCount() { return content_.size(); }
    public com.basho.riak.pbc.RPB.RpbContent getContent(int index) {
      return content_.get(index);
    }
    
    // optional bytes vclock = 2;
    public static final int VCLOCK_FIELD_NUMBER = 2;
    private boolean hasVclock;
    private com.google.protobuf.ByteString vclock_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVclock() { return hasVclock; }
    public com.google.protobuf.ByteString getVclock() { return vclock_; }
    
    // optional bool unchanged = 3;
    public static final int UNCHANGED_FIELD_NUMBER = 3;
    private boolean hasUnchanged;
    private boolean unchanged_ = false;
    public boolean hasUnchanged() { return hasUnchanged; }
    public boolean getUnchanged() { return unchanged_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        output.writeMessage(1, element);
      }
      if (hasVclock()) {
        output.writeBytes(2, getVclock());
      }
      if (hasUnchanged()) {
        output.writeBool(3, getUnchanged());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasVclock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVclock());
      }
      if (hasUnchanged()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getUnchanged());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.content_ != java.util.Collections.EMPTY_LIST) {
          result.content_ =
            java.util.Collections.unmodifiableList(result.content_);
        }
        com.basho.riak.pbc.RPB.RpbGetResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetResp.getDefaultInstance()) return this;
        if (!other.content_.isEmpty()) {
          if (result.content_.isEmpty()) {
            result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
          }
          result.content_.addAll(other.content_);
        }
        if (other.hasVclock()) {
          setVclock(other.getVclock());
        }
        if (other.hasUnchanged()) {
          setUnchanged(other.getUnchanged());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.basho.riak.pbc.RPB.RpbContent.Builder subBuilder = com.basho.riak.pbc.RPB.RpbContent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addContent(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setVclock(input.readBytes());
              break;
            }
            case 24: {
              setUnchanged(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // repeated .RpbContent content = 1;
      public java.util.List<com.basho.riak.pbc.RPB.RpbContent> getContentList() {
        return java.util.Collections.unmodifiableList(result.content_);
      }
      public int getContentCount() {
        return result.getContentCount();
      }
      public com.basho.riak.pbc.RPB.RpbContent getContent(int index) {
        return result.getContent(index);
      }
      public Builder setContent(int index, com.basho.riak.pbc.RPB.RpbContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.content_.set(index, value);
        return this;
      }
      public Builder setContent(int index, com.basho.riak.pbc.RPB.RpbContent.Builder builderForValue) {
        result.content_.set(index, builderForValue.build());
        return this;
      }
      public Builder addContent(com.basho.riak.pbc.RPB.RpbContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        result.content_.add(value);
        return this;
      }
      public Builder addContent(com.basho.riak.pbc.RPB.RpbContent.Builder builderForValue) {
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        result.content_.add(builderForValue.build());
        return this;
      }
      public Builder addAllContent(
          java.lang.Iterable<? extends com.basho.riak.pbc.RPB.RpbContent> values) {
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        super.addAll(values, result.content_);
        return this;
      }
      public Builder clearContent() {
        result.content_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes vclock = 2;
      public boolean hasVclock() {
        return result.hasVclock();
      }
      public com.google.protobuf.ByteString getVclock() {
        return result.getVclock();
      }
      public Builder setVclock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVclock = true;
        result.vclock_ = value;
        return this;
      }
      public Builder clearVclock() {
        result.hasVclock = false;
        result.vclock_ = getDefaultInstance().getVclock();
        return this;
      }
      
      // optional bool unchanged = 3;
      public boolean hasUnchanged() {
        return result.hasUnchanged();
      }
      public boolean getUnchanged() {
        return result.getUnchanged();
      }
      public Builder setUnchanged(boolean value) {
        result.hasUnchanged = true;
        result.unchanged_ = value;
        return this;
      }
      public Builder clearUnchanged() {
        result.hasUnchanged = false;
        result.unchanged_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetResp)
    }
    
    static {
      defaultInstance = new RpbGetResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetResp)
  }
  
  public static final class RpbPutReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbPutReq.newBuilder() to construct.
    private RpbPutReq() {
      initFields();
    }
    private RpbPutReq(boolean noInit) {}
    
    private static final RpbPutReq defaultInstance;
    public static RpbPutReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbPutReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPutReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPutReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    // optional bytes key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional bytes vclock = 3;
    public static final int VCLOCK_FIELD_NUMBER = 3;
    private boolean hasVclock;
    private com.google.protobuf.ByteString vclock_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVclock() { return hasVclock; }
    public com.google.protobuf.ByteString getVclock() { return vclock_; }
    
    // required .RpbContent content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private boolean hasContent;
    private com.basho.riak.pbc.RPB.RpbContent content_;
    public boolean hasContent() { return hasContent; }
    public com.basho.riak.pbc.RPB.RpbContent getContent() { return content_; }
    
    // optional uint32 w = 5;
    public static final int W_FIELD_NUMBER = 5;
    private boolean hasW;
    private int w_ = 0;
    public boolean hasW() { return hasW; }
    public int getW() { return w_; }
    
    // optional uint32 dw = 6;
    public static final int DW_FIELD_NUMBER = 6;
    private boolean hasDw;
    private int dw_ = 0;
    public boolean hasDw() { return hasDw; }
    public int getDw() { return dw_; }
    
    // optional bool return_body = 7;
    public static final int RETURN_BODY_FIELD_NUMBER = 7;
    private boolean hasReturnBody;
    private boolean returnBody_ = false;
    public boolean hasReturnBody() { return hasReturnBody; }
    public boolean getReturnBody() { return returnBody_; }
    
    // optional uint32 pw = 8;
    public static final int PW_FIELD_NUMBER = 8;
    private boolean hasPw;
    private int pw_ = 0;
    public boolean hasPw() { return hasPw; }
    public int getPw() { return pw_; }
    
    // optional bool if_not_modified = 9;
    public static final int IF_NOT_MODIFIED_FIELD_NUMBER = 9;
    private boolean hasIfNotModified;
    private boolean ifNotModified_ = false;
    public boolean hasIfNotModified() { return hasIfNotModified; }
    public boolean getIfNotModified() { return ifNotModified_; }
    
    // optional bool if_none_match = 10;
    public static final int IF_NONE_MATCH_FIELD_NUMBER = 10;
    private boolean hasIfNoneMatch;
    private boolean ifNoneMatch_ = false;
    public boolean hasIfNoneMatch() { return hasIfNoneMatch; }
    public boolean getIfNoneMatch() { return ifNoneMatch_; }
    
    // optional bool return_head = 11;
    public static final int RETURN_HEAD_FIELD_NUMBER = 11;
    private boolean hasReturnHead;
    private boolean returnHead_ = false;
    public boolean hasReturnHead() { return hasReturnHead; }
    public boolean getReturnHead() { return returnHead_; }
    
    private void initFields() {
      content_ = com.basho.riak.pbc.RPB.RpbContent.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      if (!hasContent) return false;
      if (!getContent().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      if (hasKey()) {
        output.writeBytes(2, getKey());
      }
      if (hasVclock()) {
        output.writeBytes(3, getVclock());
      }
      if (hasContent()) {
        output.writeMessage(4, getContent());
      }
      if (hasW()) {
        output.writeUInt32(5, getW());
      }
      if (hasDw()) {
        output.writeUInt32(6, getDw());
      }
      if (hasReturnBody()) {
        output.writeBool(7, getReturnBody());
      }
      if (hasPw()) {
        output.writeUInt32(8, getPw());
      }
      if (hasIfNotModified()) {
        output.writeBool(9, getIfNotModified());
      }
      if (hasIfNoneMatch()) {
        output.writeBool(10, getIfNoneMatch());
      }
      if (hasReturnHead()) {
        output.writeBool(11, getReturnHead());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKey());
      }
      if (hasVclock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getVclock());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getContent());
      }
      if (hasW()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getW());
      }
      if (hasDw()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getDw());
      }
      if (hasReturnBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getReturnBody());
      }
      if (hasPw()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getPw());
      }
      if (hasIfNotModified()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, getIfNotModified());
      }
      if (hasIfNoneMatch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, getIfNoneMatch());
      }
      if (hasReturnHead()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, getReturnHead());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbPutReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbPutReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbPutReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbPutReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbPutReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbPutReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbPutReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbPutReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbPutReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbPutReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbPutReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbPutReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbPutReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbPutReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbPutReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbPutReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbPutReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasVclock()) {
          setVclock(other.getVclock());
        }
        if (other.hasContent()) {
          mergeContent(other.getContent());
        }
        if (other.hasW()) {
          setW(other.getW());
        }
        if (other.hasDw()) {
          setDw(other.getDw());
        }
        if (other.hasReturnBody()) {
          setReturnBody(other.getReturnBody());
        }
        if (other.hasPw()) {
          setPw(other.getPw());
        }
        if (other.hasIfNotModified()) {
          setIfNotModified(other.getIfNotModified());
        }
        if (other.hasIfNoneMatch()) {
          setIfNoneMatch(other.getIfNoneMatch());
        }
        if (other.hasReturnHead()) {
          setReturnHead(other.getReturnHead());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
            case 18: {
              setKey(input.readBytes());
              break;
            }
            case 26: {
              setVclock(input.readBytes());
              break;
            }
            case 34: {
              com.basho.riak.pbc.RPB.RpbContent.Builder subBuilder = com.basho.riak.pbc.RPB.RpbContent.newBuilder();
              if (hasContent()) {
                subBuilder.mergeFrom(getContent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContent(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setW(input.readUInt32());
              break;
            }
            case 48: {
              setDw(input.readUInt32());
              break;
            }
            case 56: {
              setReturnBody(input.readBool());
              break;
            }
            case 64: {
              setPw(input.readUInt32());
              break;
            }
            case 72: {
              setIfNotModified(input.readBool());
              break;
            }
            case 80: {
              setIfNoneMatch(input.readBool());
              break;
            }
            case 88: {
              setReturnHead(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // optional bytes key = 2;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional bytes vclock = 3;
      public boolean hasVclock() {
        return result.hasVclock();
      }
      public com.google.protobuf.ByteString getVclock() {
        return result.getVclock();
      }
      public Builder setVclock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVclock = true;
        result.vclock_ = value;
        return this;
      }
      public Builder clearVclock() {
        result.hasVclock = false;
        result.vclock_ = getDefaultInstance().getVclock();
        return this;
      }
      
      // required .RpbContent content = 4;
      public boolean hasContent() {
        return result.hasContent();
      }
      public com.basho.riak.pbc.RPB.RpbContent getContent() {
        return result.getContent();
      }
      public Builder setContent(com.basho.riak.pbc.RPB.RpbContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder setContent(com.basho.riak.pbc.RPB.RpbContent.Builder builderForValue) {
        result.hasContent = true;
        result.content_ = builderForValue.build();
        return this;
      }
      public Builder mergeContent(com.basho.riak.pbc.RPB.RpbContent value) {
        if (result.hasContent() &&
            result.content_ != com.basho.riak.pbc.RPB.RpbContent.getDefaultInstance()) {
          result.content_ =
            com.basho.riak.pbc.RPB.RpbContent.newBuilder(result.content_).mergeFrom(value).buildPartial();
        } else {
          result.content_ = value;
        }
        result.hasContent = true;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = com.basho.riak.pbc.RPB.RpbContent.getDefaultInstance();
        return this;
      }
      
      // optional uint32 w = 5;
      public boolean hasW() {
        return result.hasW();
      }
      public int getW() {
        return result.getW();
      }
      public Builder setW(int value) {
        result.hasW = true;
        result.w_ = value;
        return this;
      }
      public Builder clearW() {
        result.hasW = false;
        result.w_ = 0;
        return this;
      }
      
      // optional uint32 dw = 6;
      public boolean hasDw() {
        return result.hasDw();
      }
      public int getDw() {
        return result.getDw();
      }
      public Builder setDw(int value) {
        result.hasDw = true;
        result.dw_ = value;
        return this;
      }
      public Builder clearDw() {
        result.hasDw = false;
        result.dw_ = 0;
        return this;
      }
      
      // optional bool return_body = 7;
      public boolean hasReturnBody() {
        return result.hasReturnBody();
      }
      public boolean getReturnBody() {
        return result.getReturnBody();
      }
      public Builder setReturnBody(boolean value) {
        result.hasReturnBody = true;
        result.returnBody_ = value;
        return this;
      }
      public Builder clearReturnBody() {
        result.hasReturnBody = false;
        result.returnBody_ = false;
        return this;
      }
      
      // optional uint32 pw = 8;
      public boolean hasPw() {
        return result.hasPw();
      }
      public int getPw() {
        return result.getPw();
      }
      public Builder setPw(int value) {
        result.hasPw = true;
        result.pw_ = value;
        return this;
      }
      public Builder clearPw() {
        result.hasPw = false;
        result.pw_ = 0;
        return this;
      }
      
      // optional bool if_not_modified = 9;
      public boolean hasIfNotModified() {
        return result.hasIfNotModified();
      }
      public boolean getIfNotModified() {
        return result.getIfNotModified();
      }
      public Builder setIfNotModified(boolean value) {
        result.hasIfNotModified = true;
        result.ifNotModified_ = value;
        return this;
      }
      public Builder clearIfNotModified() {
        result.hasIfNotModified = false;
        result.ifNotModified_ = false;
        return this;
      }
      
      // optional bool if_none_match = 10;
      public boolean hasIfNoneMatch() {
        return result.hasIfNoneMatch();
      }
      public boolean getIfNoneMatch() {
        return result.getIfNoneMatch();
      }
      public Builder setIfNoneMatch(boolean value) {
        result.hasIfNoneMatch = true;
        result.ifNoneMatch_ = value;
        return this;
      }
      public Builder clearIfNoneMatch() {
        result.hasIfNoneMatch = false;
        result.ifNoneMatch_ = false;
        return this;
      }
      
      // optional bool return_head = 11;
      public boolean hasReturnHead() {
        return result.hasReturnHead();
      }
      public boolean getReturnHead() {
        return result.getReturnHead();
      }
      public Builder setReturnHead(boolean value) {
        result.hasReturnHead = true;
        result.returnHead_ = value;
        return this;
      }
      public Builder clearReturnHead() {
        result.hasReturnHead = false;
        result.returnHead_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbPutReq)
    }
    
    static {
      defaultInstance = new RpbPutReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbPutReq)
  }
  
  public static final class RpbPutResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbPutResp.newBuilder() to construct.
    private RpbPutResp() {
      initFields();
    }
    private RpbPutResp(boolean noInit) {}
    
    private static final RpbPutResp defaultInstance;
    public static RpbPutResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbPutResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPutResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPutResp_fieldAccessorTable;
    }
    
    // repeated .RpbContent content = 1;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private java.util.List<com.basho.riak.pbc.RPB.RpbContent> content_ =
      java.util.Collections.emptyList();
    public java.util.List<com.basho.riak.pbc.RPB.RpbContent> getContentList() {
      return content_;
    }
    public int getContentCount() { return content_.size(); }
    public com.basho.riak.pbc.RPB.RpbContent getContent(int index) {
      return content_.get(index);
    }
    
    // optional bytes vclock = 2;
    public static final int VCLOCK_FIELD_NUMBER = 2;
    private boolean hasVclock;
    private com.google.protobuf.ByteString vclock_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVclock() { return hasVclock; }
    public com.google.protobuf.ByteString getVclock() { return vclock_; }
    
    // optional bytes key = 3;
    public static final int KEY_FIELD_NUMBER = 3;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        output.writeMessage(1, element);
      }
      if (hasVclock()) {
        output.writeBytes(2, getVclock());
      }
      if (hasKey()) {
        output.writeBytes(3, getKey());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.basho.riak.pbc.RPB.RpbContent element : getContentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasVclock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVclock());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getKey());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPutResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbPutResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbPutResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbPutResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbPutResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbPutResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbPutResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbPutResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbPutResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbPutResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbPutResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbPutResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbPutResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.content_ != java.util.Collections.EMPTY_LIST) {
          result.content_ =
            java.util.Collections.unmodifiableList(result.content_);
        }
        com.basho.riak.pbc.RPB.RpbPutResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbPutResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbPutResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbPutResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbPutResp.getDefaultInstance()) return this;
        if (!other.content_.isEmpty()) {
          if (result.content_.isEmpty()) {
            result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
          }
          result.content_.addAll(other.content_);
        }
        if (other.hasVclock()) {
          setVclock(other.getVclock());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.basho.riak.pbc.RPB.RpbContent.Builder subBuilder = com.basho.riak.pbc.RPB.RpbContent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addContent(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setVclock(input.readBytes());
              break;
            }
            case 26: {
              setKey(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // repeated .RpbContent content = 1;
      public java.util.List<com.basho.riak.pbc.RPB.RpbContent> getContentList() {
        return java.util.Collections.unmodifiableList(result.content_);
      }
      public int getContentCount() {
        return result.getContentCount();
      }
      public com.basho.riak.pbc.RPB.RpbContent getContent(int index) {
        return result.getContent(index);
      }
      public Builder setContent(int index, com.basho.riak.pbc.RPB.RpbContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.content_.set(index, value);
        return this;
      }
      public Builder setContent(int index, com.basho.riak.pbc.RPB.RpbContent.Builder builderForValue) {
        result.content_.set(index, builderForValue.build());
        return this;
      }
      public Builder addContent(com.basho.riak.pbc.RPB.RpbContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        result.content_.add(value);
        return this;
      }
      public Builder addContent(com.basho.riak.pbc.RPB.RpbContent.Builder builderForValue) {
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        result.content_.add(builderForValue.build());
        return this;
      }
      public Builder addAllContent(
          java.lang.Iterable<? extends com.basho.riak.pbc.RPB.RpbContent> values) {
        if (result.content_.isEmpty()) {
          result.content_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbContent>();
        }
        super.addAll(values, result.content_);
        return this;
      }
      public Builder clearContent() {
        result.content_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes vclock = 2;
      public boolean hasVclock() {
        return result.hasVclock();
      }
      public com.google.protobuf.ByteString getVclock() {
        return result.getVclock();
      }
      public Builder setVclock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVclock = true;
        result.vclock_ = value;
        return this;
      }
      public Builder clearVclock() {
        result.hasVclock = false;
        result.vclock_ = getDefaultInstance().getVclock();
        return this;
      }
      
      // optional bytes key = 3;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbPutResp)
    }
    
    static {
      defaultInstance = new RpbPutResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbPutResp)
  }
  
  public static final class RpbDelReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbDelReq.newBuilder() to construct.
    private RpbDelReq() {
      initFields();
    }
    private RpbDelReq(boolean noInit) {}
    
    private static final RpbDelReq defaultInstance;
    public static RpbDelReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbDelReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbDelReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbDelReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    // required bytes key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional uint32 rw = 3;
    public static final int RW_FIELD_NUMBER = 3;
    private boolean hasRw;
    private int rw_ = 0;
    public boolean hasRw() { return hasRw; }
    public int getRw() { return rw_; }
    
    // optional bytes vclock = 4;
    public static final int VCLOCK_FIELD_NUMBER = 4;
    private boolean hasVclock;
    private com.google.protobuf.ByteString vclock_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVclock() { return hasVclock; }
    public com.google.protobuf.ByteString getVclock() { return vclock_; }
    
    // optional uint32 r = 5;
    public static final int R_FIELD_NUMBER = 5;
    private boolean hasR;
    private int r_ = 0;
    public boolean hasR() { return hasR; }
    public int getR() { return r_; }
    
    // optional uint32 w = 6;
    public static final int W_FIELD_NUMBER = 6;
    private boolean hasW;
    private int w_ = 0;
    public boolean hasW() { return hasW; }
    public int getW() { return w_; }
    
    // optional uint32 pr = 7;
    public static final int PR_FIELD_NUMBER = 7;
    private boolean hasPr;
    private int pr_ = 0;
    public boolean hasPr() { return hasPr; }
    public int getPr() { return pr_; }
    
    // optional uint32 pw = 8;
    public static final int PW_FIELD_NUMBER = 8;
    private boolean hasPw;
    private int pw_ = 0;
    public boolean hasPw() { return hasPw; }
    public int getPw() { return pw_; }
    
    // optional uint32 dw = 9;
    public static final int DW_FIELD_NUMBER = 9;
    private boolean hasDw;
    private int dw_ = 0;
    public boolean hasDw() { return hasDw; }
    public int getDw() { return dw_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      if (!hasKey) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      if (hasKey()) {
        output.writeBytes(2, getKey());
      }
      if (hasRw()) {
        output.writeUInt32(3, getRw());
      }
      if (hasVclock()) {
        output.writeBytes(4, getVclock());
      }
      if (hasR()) {
        output.writeUInt32(5, getR());
      }
      if (hasW()) {
        output.writeUInt32(6, getW());
      }
      if (hasPr()) {
        output.writeUInt32(7, getPr());
      }
      if (hasPw()) {
        output.writeUInt32(8, getPw());
      }
      if (hasDw()) {
        output.writeUInt32(9, getDw());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKey());
      }
      if (hasRw()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getRw());
      }
      if (hasVclock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getVclock());
      }
      if (hasR()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getR());
      }
      if (hasW()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getW());
      }
      if (hasPr()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getPr());
      }
      if (hasPw()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getPw());
      }
      if (hasDw()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, getDw());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbDelReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbDelReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbDelReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbDelReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbDelReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbDelReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbDelReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbDelReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbDelReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbDelReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbDelReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbDelReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbDelReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbDelReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbDelReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbDelReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbDelReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbDelReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasRw()) {
          setRw(other.getRw());
        }
        if (other.hasVclock()) {
          setVclock(other.getVclock());
        }
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasW()) {
          setW(other.getW());
        }
        if (other.hasPr()) {
          setPr(other.getPr());
        }
        if (other.hasPw()) {
          setPw(other.getPw());
        }
        if (other.hasDw()) {
          setDw(other.getDw());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
            case 18: {
              setKey(input.readBytes());
              break;
            }
            case 24: {
              setRw(input.readUInt32());
              break;
            }
            case 34: {
              setVclock(input.readBytes());
              break;
            }
            case 40: {
              setR(input.readUInt32());
              break;
            }
            case 48: {
              setW(input.readUInt32());
              break;
            }
            case 56: {
              setPr(input.readUInt32());
              break;
            }
            case 64: {
              setPw(input.readUInt32());
              break;
            }
            case 72: {
              setDw(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // required bytes key = 2;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional uint32 rw = 3;
      public boolean hasRw() {
        return result.hasRw();
      }
      public int getRw() {
        return result.getRw();
      }
      public Builder setRw(int value) {
        result.hasRw = true;
        result.rw_ = value;
        return this;
      }
      public Builder clearRw() {
        result.hasRw = false;
        result.rw_ = 0;
        return this;
      }
      
      // optional bytes vclock = 4;
      public boolean hasVclock() {
        return result.hasVclock();
      }
      public com.google.protobuf.ByteString getVclock() {
        return result.getVclock();
      }
      public Builder setVclock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVclock = true;
        result.vclock_ = value;
        return this;
      }
      public Builder clearVclock() {
        result.hasVclock = false;
        result.vclock_ = getDefaultInstance().getVclock();
        return this;
      }
      
      // optional uint32 r = 5;
      public boolean hasR() {
        return result.hasR();
      }
      public int getR() {
        return result.getR();
      }
      public Builder setR(int value) {
        result.hasR = true;
        result.r_ = value;
        return this;
      }
      public Builder clearR() {
        result.hasR = false;
        result.r_ = 0;
        return this;
      }
      
      // optional uint32 w = 6;
      public boolean hasW() {
        return result.hasW();
      }
      public int getW() {
        return result.getW();
      }
      public Builder setW(int value) {
        result.hasW = true;
        result.w_ = value;
        return this;
      }
      public Builder clearW() {
        result.hasW = false;
        result.w_ = 0;
        return this;
      }
      
      // optional uint32 pr = 7;
      public boolean hasPr() {
        return result.hasPr();
      }
      public int getPr() {
        return result.getPr();
      }
      public Builder setPr(int value) {
        result.hasPr = true;
        result.pr_ = value;
        return this;
      }
      public Builder clearPr() {
        result.hasPr = false;
        result.pr_ = 0;
        return this;
      }
      
      // optional uint32 pw = 8;
      public boolean hasPw() {
        return result.hasPw();
      }
      public int getPw() {
        return result.getPw();
      }
      public Builder setPw(int value) {
        result.hasPw = true;
        result.pw_ = value;
        return this;
      }
      public Builder clearPw() {
        result.hasPw = false;
        result.pw_ = 0;
        return this;
      }
      
      // optional uint32 dw = 9;
      public boolean hasDw() {
        return result.hasDw();
      }
      public int getDw() {
        return result.getDw();
      }
      public Builder setDw(int value) {
        result.hasDw = true;
        result.dw_ = value;
        return this;
      }
      public Builder clearDw() {
        result.hasDw = false;
        result.dw_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbDelReq)
    }
    
    static {
      defaultInstance = new RpbDelReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbDelReq)
  }
  
  public static final class RpbListBucketsResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbListBucketsResp.newBuilder() to construct.
    private RpbListBucketsResp() {
      initFields();
    }
    private RpbListBucketsResp(boolean noInit) {}
    
    private static final RpbListBucketsResp defaultInstance;
    public static RpbListBucketsResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbListBucketsResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListBucketsResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListBucketsResp_fieldAccessorTable;
    }
    
    // repeated bytes buckets = 1;
    public static final int BUCKETS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> buckets_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getBucketsList() {
      return buckets_;
    }
    public int getBucketsCount() { return buckets_.size(); }
    public com.google.protobuf.ByteString getBuckets(int index) {
      return buckets_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.google.protobuf.ByteString element : getBucketsList()) {
        output.writeBytes(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getBucketsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getBucketsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListBucketsResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbListBucketsResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbListBucketsResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbListBucketsResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbListBucketsResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbListBucketsResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbListBucketsResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbListBucketsResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbListBucketsResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbListBucketsResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbListBucketsResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbListBucketsResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbListBucketsResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.buckets_ != java.util.Collections.EMPTY_LIST) {
          result.buckets_ =
            java.util.Collections.unmodifiableList(result.buckets_);
        }
        com.basho.riak.pbc.RPB.RpbListBucketsResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbListBucketsResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbListBucketsResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbListBucketsResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbListBucketsResp.getDefaultInstance()) return this;
        if (!other.buckets_.isEmpty()) {
          if (result.buckets_.isEmpty()) {
            result.buckets_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.buckets_.addAll(other.buckets_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addBuckets(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // repeated bytes buckets = 1;
      public java.util.List<com.google.protobuf.ByteString> getBucketsList() {
        return java.util.Collections.unmodifiableList(result.buckets_);
      }
      public int getBucketsCount() {
        return result.getBucketsCount();
      }
      public com.google.protobuf.ByteString getBuckets(int index) {
        return result.getBuckets(index);
      }
      public Builder setBuckets(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.buckets_.set(index, value);
        return this;
      }
      public Builder addBuckets(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.buckets_.isEmpty()) {
          result.buckets_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.buckets_.add(value);
        return this;
      }
      public Builder addAllBuckets(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.buckets_.isEmpty()) {
          result.buckets_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.buckets_);
        return this;
      }
      public Builder clearBuckets() {
        result.buckets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbListBucketsResp)
    }
    
    static {
      defaultInstance = new RpbListBucketsResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbListBucketsResp)
  }
  
  public static final class RpbListKeysReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbListKeysReq.newBuilder() to construct.
    private RpbListKeysReq() {
      initFields();
    }
    private RpbListKeysReq(boolean noInit) {}
    
    private static final RpbListKeysReq defaultInstance;
    public static RpbListKeysReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbListKeysReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListKeysReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListKeysReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbListKeysReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbListKeysReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbListKeysReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbListKeysReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbListKeysReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbListKeysReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbListKeysReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbListKeysReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbListKeysReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbListKeysReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbListKeysReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbListKeysReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbListKeysReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbListKeysReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbListKeysReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbListKeysReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbListKeysReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbListKeysReq)
    }
    
    static {
      defaultInstance = new RpbListKeysReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbListKeysReq)
  }
  
  public static final class RpbListKeysResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbListKeysResp.newBuilder() to construct.
    private RpbListKeysResp() {
      initFields();
    }
    private RpbListKeysResp(boolean noInit) {}
    
    private static final RpbListKeysResp defaultInstance;
    public static RpbListKeysResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbListKeysResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListKeysResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbListKeysResp_fieldAccessorTable;
    }
    
    // repeated bytes keys = 1;
    public static final int KEYS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> keys_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getKeysList() {
      return keys_;
    }
    public int getKeysCount() { return keys_.size(); }
    public com.google.protobuf.ByteString getKeys(int index) {
      return keys_.get(index);
    }
    
    // optional bool done = 2;
    public static final int DONE_FIELD_NUMBER = 2;
    private boolean hasDone;
    private boolean done_ = false;
    public boolean hasDone() { return hasDone; }
    public boolean getDone() { return done_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.google.protobuf.ByteString element : getKeysList()) {
        output.writeBytes(1, element);
      }
      if (hasDone()) {
        output.writeBool(2, getDone());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getKeysList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      if (hasDone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getDone());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbListKeysResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbListKeysResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbListKeysResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbListKeysResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbListKeysResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbListKeysResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbListKeysResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbListKeysResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbListKeysResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbListKeysResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbListKeysResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbListKeysResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbListKeysResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.keys_ != java.util.Collections.EMPTY_LIST) {
          result.keys_ =
            java.util.Collections.unmodifiableList(result.keys_);
        }
        com.basho.riak.pbc.RPB.RpbListKeysResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbListKeysResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbListKeysResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbListKeysResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbListKeysResp.getDefaultInstance()) return this;
        if (!other.keys_.isEmpty()) {
          if (result.keys_.isEmpty()) {
            result.keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.keys_.addAll(other.keys_);
        }
        if (other.hasDone()) {
          setDone(other.getDone());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addKeys(input.readBytes());
              break;
            }
            case 16: {
              setDone(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // repeated bytes keys = 1;
      public java.util.List<com.google.protobuf.ByteString> getKeysList() {
        return java.util.Collections.unmodifiableList(result.keys_);
      }
      public int getKeysCount() {
        return result.getKeysCount();
      }
      public com.google.protobuf.ByteString getKeys(int index) {
        return result.getKeys(index);
      }
      public Builder setKeys(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.keys_.set(index, value);
        return this;
      }
      public Builder addKeys(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.keys_.isEmpty()) {
          result.keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.keys_.add(value);
        return this;
      }
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.keys_.isEmpty()) {
          result.keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.keys_);
        return this;
      }
      public Builder clearKeys() {
        result.keys_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool done = 2;
      public boolean hasDone() {
        return result.hasDone();
      }
      public boolean getDone() {
        return result.getDone();
      }
      public Builder setDone(boolean value) {
        result.hasDone = true;
        result.done_ = value;
        return this;
      }
      public Builder clearDone() {
        result.hasDone = false;
        result.done_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbListKeysResp)
    }
    
    static {
      defaultInstance = new RpbListKeysResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbListKeysResp)
  }
  
  public static final class RpbGetBucketReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetBucketReq.newBuilder() to construct.
    private RpbGetBucketReq() {
      initFields();
    }
    private RpbGetBucketReq(boolean noInit) {}
    
    private static final RpbGetBucketReq defaultInstance;
    public static RpbGetBucketReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetBucketReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetBucketReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetBucketReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetBucketReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetBucketReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetBucketReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetBucketReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetBucketReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetBucketReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetBucketReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetBucketReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetBucketReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetBucketReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetBucketReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetBucketReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbGetBucketReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetBucketReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetBucketReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetBucketReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetBucketReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetBucketReq)
    }
    
    static {
      defaultInstance = new RpbGetBucketReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetBucketReq)
  }
  
  public static final class RpbGetBucketResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbGetBucketResp.newBuilder() to construct.
    private RpbGetBucketResp() {
      initFields();
    }
    private RpbGetBucketResp(boolean noInit) {}
    
    private static final RpbGetBucketResp defaultInstance;
    public static RpbGetBucketResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbGetBucketResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetBucketResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbGetBucketResp_fieldAccessorTable;
    }
    
    // required .RpbBucketProps props = 1;
    public static final int PROPS_FIELD_NUMBER = 1;
    private boolean hasProps;
    private com.basho.riak.pbc.RPB.RpbBucketProps props_;
    public boolean hasProps() { return hasProps; }
    public com.basho.riak.pbc.RPB.RpbBucketProps getProps() { return props_; }
    
    private void initFields() {
      props_ = com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasProps) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasProps()) {
        output.writeMessage(1, getProps());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasProps()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProps());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbGetBucketResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbGetBucketResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbGetBucketResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbGetBucketResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbGetBucketResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbGetBucketResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbGetBucketResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbGetBucketResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetBucketResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbGetBucketResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbGetBucketResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbGetBucketResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbGetBucketResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbGetBucketResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbGetBucketResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbGetBucketResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbGetBucketResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbGetBucketResp.getDefaultInstance()) return this;
        if (other.hasProps()) {
          mergeProps(other.getProps());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.basho.riak.pbc.RPB.RpbBucketProps.Builder subBuilder = com.basho.riak.pbc.RPB.RpbBucketProps.newBuilder();
              if (hasProps()) {
                subBuilder.mergeFrom(getProps());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProps(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .RpbBucketProps props = 1;
      public boolean hasProps() {
        return result.hasProps();
      }
      public com.basho.riak.pbc.RPB.RpbBucketProps getProps() {
        return result.getProps();
      }
      public Builder setProps(com.basho.riak.pbc.RPB.RpbBucketProps value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasProps = true;
        result.props_ = value;
        return this;
      }
      public Builder setProps(com.basho.riak.pbc.RPB.RpbBucketProps.Builder builderForValue) {
        result.hasProps = true;
        result.props_ = builderForValue.build();
        return this;
      }
      public Builder mergeProps(com.basho.riak.pbc.RPB.RpbBucketProps value) {
        if (result.hasProps() &&
            result.props_ != com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance()) {
          result.props_ =
            com.basho.riak.pbc.RPB.RpbBucketProps.newBuilder(result.props_).mergeFrom(value).buildPartial();
        } else {
          result.props_ = value;
        }
        result.hasProps = true;
        return this;
      }
      public Builder clearProps() {
        result.hasProps = false;
        result.props_ = com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbGetBucketResp)
    }
    
    static {
      defaultInstance = new RpbGetBucketResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbGetBucketResp)
  }
  
  public static final class RpbSetBucketReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbSetBucketReq.newBuilder() to construct.
    private RpbSetBucketReq() {
      initFields();
    }
    private RpbSetBucketReq(boolean noInit) {}
    
    private static final RpbSetBucketReq defaultInstance;
    public static RpbSetBucketReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbSetBucketReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbSetBucketReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbSetBucketReq_fieldAccessorTable;
    }
    
    // required bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    // required .RpbBucketProps props = 2;
    public static final int PROPS_FIELD_NUMBER = 2;
    private boolean hasProps;
    private com.basho.riak.pbc.RPB.RpbBucketProps props_;
    public boolean hasProps() { return hasProps; }
    public com.basho.riak.pbc.RPB.RpbBucketProps getProps() { return props_; }
    
    private void initFields() {
      props_ = com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasBucket) return false;
      if (!hasProps) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      if (hasProps()) {
        output.writeMessage(2, getProps());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      if (hasProps()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProps());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbSetBucketReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbSetBucketReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbSetBucketReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbSetBucketReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbSetBucketReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbSetBucketReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbSetBucketReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbSetBucketReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbSetBucketReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbSetBucketReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbSetBucketReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbSetBucketReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbSetBucketReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbSetBucketReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbSetBucketReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbSetBucketReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbSetBucketReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbSetBucketReq.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        if (other.hasProps()) {
          mergeProps(other.getProps());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
            case 18: {
              com.basho.riak.pbc.RPB.RpbBucketProps.Builder subBuilder = com.basho.riak.pbc.RPB.RpbBucketProps.newBuilder();
              if (hasProps()) {
                subBuilder.mergeFrom(getProps());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProps(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // required .RpbBucketProps props = 2;
      public boolean hasProps() {
        return result.hasProps();
      }
      public com.basho.riak.pbc.RPB.RpbBucketProps getProps() {
        return result.getProps();
      }
      public Builder setProps(com.basho.riak.pbc.RPB.RpbBucketProps value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasProps = true;
        result.props_ = value;
        return this;
      }
      public Builder setProps(com.basho.riak.pbc.RPB.RpbBucketProps.Builder builderForValue) {
        result.hasProps = true;
        result.props_ = builderForValue.build();
        return this;
      }
      public Builder mergeProps(com.basho.riak.pbc.RPB.RpbBucketProps value) {
        if (result.hasProps() &&
            result.props_ != com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance()) {
          result.props_ =
            com.basho.riak.pbc.RPB.RpbBucketProps.newBuilder(result.props_).mergeFrom(value).buildPartial();
        } else {
          result.props_ = value;
        }
        result.hasProps = true;
        return this;
      }
      public Builder clearProps() {
        result.hasProps = false;
        result.props_ = com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbSetBucketReq)
    }
    
    static {
      defaultInstance = new RpbSetBucketReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbSetBucketReq)
  }
  
  public static final class RpbMapRedReq extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbMapRedReq.newBuilder() to construct.
    private RpbMapRedReq() {
      initFields();
    }
    private RpbMapRedReq(boolean noInit) {}
    
    private static final RpbMapRedReq defaultInstance;
    public static RpbMapRedReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbMapRedReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbMapRedReq_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbMapRedReq_fieldAccessorTable;
    }
    
    // required bytes request = 1;
    public static final int REQUEST_FIELD_NUMBER = 1;
    private boolean hasRequest;
    private com.google.protobuf.ByteString request_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRequest() { return hasRequest; }
    public com.google.protobuf.ByteString getRequest() { return request_; }
    
    // required bytes content_type = 2;
    public static final int CONTENT_TYPE_FIELD_NUMBER = 2;
    private boolean hasContentType;
    private com.google.protobuf.ByteString contentType_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasContentType() { return hasContentType; }
    public com.google.protobuf.ByteString getContentType() { return contentType_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasRequest) return false;
      if (!hasContentType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequest()) {
        output.writeBytes(1, getRequest());
      }
      if (hasContentType()) {
        output.writeBytes(2, getContentType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRequest());
      }
      if (hasContentType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbMapRedReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbMapRedReq result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbMapRedReq.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbMapRedReq();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbMapRedReq internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbMapRedReq();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbMapRedReq.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbMapRedReq getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbMapRedReq.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbMapRedReq build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbMapRedReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbMapRedReq buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbMapRedReq returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbMapRedReq) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbMapRedReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbMapRedReq other) {
        if (other == com.basho.riak.pbc.RPB.RpbMapRedReq.getDefaultInstance()) return this;
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        if (other.hasContentType()) {
          setContentType(other.getContentType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRequest(input.readBytes());
              break;
            }
            case 18: {
              setContentType(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes request = 1;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public com.google.protobuf.ByteString getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = getDefaultInstance().getRequest();
        return this;
      }
      
      // required bytes content_type = 2;
      public boolean hasContentType() {
        return result.hasContentType();
      }
      public com.google.protobuf.ByteString getContentType() {
        return result.getContentType();
      }
      public Builder setContentType(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContentType = true;
        result.contentType_ = value;
        return this;
      }
      public Builder clearContentType() {
        result.hasContentType = false;
        result.contentType_ = getDefaultInstance().getContentType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbMapRedReq)
    }
    
    static {
      defaultInstance = new RpbMapRedReq(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbMapRedReq)
  }
  
  public static final class RpbMapRedResp extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbMapRedResp.newBuilder() to construct.
    private RpbMapRedResp() {
      initFields();
    }
    private RpbMapRedResp(boolean noInit) {}
    
    private static final RpbMapRedResp defaultInstance;
    public static RpbMapRedResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbMapRedResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbMapRedResp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbMapRedResp_fieldAccessorTable;
    }
    
    // optional uint32 phase = 1;
    public static final int PHASE_FIELD_NUMBER = 1;
    private boolean hasPhase;
    private int phase_ = 0;
    public boolean hasPhase() { return hasPhase; }
    public int getPhase() { return phase_; }
    
    // optional bytes response = 2;
    public static final int RESPONSE_FIELD_NUMBER = 2;
    private boolean hasResponse;
    private com.google.protobuf.ByteString response_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasResponse() { return hasResponse; }
    public com.google.protobuf.ByteString getResponse() { return response_; }
    
    // optional bool done = 3;
    public static final int DONE_FIELD_NUMBER = 3;
    private boolean hasDone;
    private boolean done_ = false;
    public boolean hasDone() { return hasDone; }
    public boolean getDone() { return done_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPhase()) {
        output.writeUInt32(1, getPhase());
      }
      if (hasResponse()) {
        output.writeBytes(2, getResponse());
      }
      if (hasDone()) {
        output.writeBool(3, getDone());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPhase()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getPhase());
      }
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getResponse());
      }
      if (hasDone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getDone());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbMapRedResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbMapRedResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbMapRedResp result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbMapRedResp.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbMapRedResp();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbMapRedResp internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbMapRedResp();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbMapRedResp.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbMapRedResp getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbMapRedResp.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbMapRedResp build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbMapRedResp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbMapRedResp buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbMapRedResp returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbMapRedResp) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbMapRedResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbMapRedResp other) {
        if (other == com.basho.riak.pbc.RPB.RpbMapRedResp.getDefaultInstance()) return this;
        if (other.hasPhase()) {
          setPhase(other.getPhase());
        }
        if (other.hasResponse()) {
          setResponse(other.getResponse());
        }
        if (other.hasDone()) {
          setDone(other.getDone());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPhase(input.readUInt32());
              break;
            }
            case 18: {
              setResponse(input.readBytes());
              break;
            }
            case 24: {
              setDone(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 phase = 1;
      public boolean hasPhase() {
        return result.hasPhase();
      }
      public int getPhase() {
        return result.getPhase();
      }
      public Builder setPhase(int value) {
        result.hasPhase = true;
        result.phase_ = value;
        return this;
      }
      public Builder clearPhase() {
        result.hasPhase = false;
        result.phase_ = 0;
        return this;
      }
      
      // optional bytes response = 2;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.google.protobuf.ByteString getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = getDefaultInstance().getResponse();
        return this;
      }
      
      // optional bool done = 3;
      public boolean hasDone() {
        return result.hasDone();
      }
      public boolean getDone() {
        return result.getDone();
      }
      public Builder setDone(boolean value) {
        result.hasDone = true;
        result.done_ = value;
        return this;
      }
      public Builder clearDone() {
        result.hasDone = false;
        result.done_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbMapRedResp)
    }
    
    static {
      defaultInstance = new RpbMapRedResp(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbMapRedResp)
  }
  
  public static final class RpbContent extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbContent.newBuilder() to construct.
    private RpbContent() {
      initFields();
    }
    private RpbContent(boolean noInit) {}
    
    private static final RpbContent defaultInstance;
    public static RpbContent getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbContent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbContent_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbContent_fieldAccessorTable;
    }
    
    // required bytes value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasValue() { return hasValue; }
    public com.google.protobuf.ByteString getValue() { return value_; }
    
    // optional bytes content_type = 2;
    public static final int CONTENT_TYPE_FIELD_NUMBER = 2;
    private boolean hasContentType;
    private com.google.protobuf.ByteString contentType_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasContentType() { return hasContentType; }
    public com.google.protobuf.ByteString getContentType() { return contentType_; }
    
    // optional bytes charset = 3;
    public static final int CHARSET_FIELD_NUMBER = 3;
    private boolean hasCharset;
    private com.google.protobuf.ByteString charset_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasCharset() { return hasCharset; }
    public com.google.protobuf.ByteString getCharset() { return charset_; }
    
    // optional bytes content_encoding = 4;
    public static final int CONTENT_ENCODING_FIELD_NUMBER = 4;
    private boolean hasContentEncoding;
    private com.google.protobuf.ByteString contentEncoding_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasContentEncoding() { return hasContentEncoding; }
    public com.google.protobuf.ByteString getContentEncoding() { return contentEncoding_; }
    
    // optional bytes vtag = 5;
    public static final int VTAG_FIELD_NUMBER = 5;
    private boolean hasVtag;
    private com.google.protobuf.ByteString vtag_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVtag() { return hasVtag; }
    public com.google.protobuf.ByteString getVtag() { return vtag_; }
    
    // repeated .RpbLink links = 6;
    public static final int LINKS_FIELD_NUMBER = 6;
    private java.util.List<com.basho.riak.pbc.RPB.RpbLink> links_ =
      java.util.Collections.emptyList();
    public java.util.List<com.basho.riak.pbc.RPB.RpbLink> getLinksList() {
      return links_;
    }
    public int getLinksCount() { return links_.size(); }
    public com.basho.riak.pbc.RPB.RpbLink getLinks(int index) {
      return links_.get(index);
    }
    
    // optional uint32 last_mod = 7;
    public static final int LAST_MOD_FIELD_NUMBER = 7;
    private boolean hasLastMod;
    private int lastMod_ = 0;
    public boolean hasLastMod() { return hasLastMod; }
    public int getLastMod() { return lastMod_; }
    
    // optional uint32 last_mod_usecs = 8;
    public static final int LAST_MOD_USECS_FIELD_NUMBER = 8;
    private boolean hasLastModUsecs;
    private int lastModUsecs_ = 0;
    public boolean hasLastModUsecs() { return hasLastModUsecs; }
    public int getLastModUsecs() { return lastModUsecs_; }
    
    // repeated .RpbPair usermeta = 9;
    public static final int USERMETA_FIELD_NUMBER = 9;
    private java.util.List<com.basho.riak.pbc.RPB.RpbPair> usermeta_ =
      java.util.Collections.emptyList();
    public java.util.List<com.basho.riak.pbc.RPB.RpbPair> getUsermetaList() {
      return usermeta_;
    }
    public int getUsermetaCount() { return usermeta_.size(); }
    public com.basho.riak.pbc.RPB.RpbPair getUsermeta(int index) {
      return usermeta_.get(index);
    }
    
    // repeated .RpbPair indexes = 10;
    public static final int INDEXES_FIELD_NUMBER = 10;
    private java.util.List<com.basho.riak.pbc.RPB.RpbPair> indexes_ =
      java.util.Collections.emptyList();
    public java.util.List<com.basho.riak.pbc.RPB.RpbPair> getIndexesList() {
      return indexes_;
    }
    public int getIndexesCount() { return indexes_.size(); }
    public com.basho.riak.pbc.RPB.RpbPair getIndexes(int index) {
      return indexes_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasValue) return false;
      for (com.basho.riak.pbc.RPB.RpbPair element : getUsermetaList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.basho.riak.pbc.RPB.RpbPair element : getIndexesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasValue()) {
        output.writeBytes(1, getValue());
      }
      if (hasContentType()) {
        output.writeBytes(2, getContentType());
      }
      if (hasCharset()) {
        output.writeBytes(3, getCharset());
      }
      if (hasContentEncoding()) {
        output.writeBytes(4, getContentEncoding());
      }
      if (hasVtag()) {
        output.writeBytes(5, getVtag());
      }
      for (com.basho.riak.pbc.RPB.RpbLink element : getLinksList()) {
        output.writeMessage(6, element);
      }
      if (hasLastMod()) {
        output.writeUInt32(7, getLastMod());
      }
      if (hasLastModUsecs()) {
        output.writeUInt32(8, getLastModUsecs());
      }
      for (com.basho.riak.pbc.RPB.RpbPair element : getUsermetaList()) {
        output.writeMessage(9, element);
      }
      for (com.basho.riak.pbc.RPB.RpbPair element : getIndexesList()) {
        output.writeMessage(10, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getValue());
      }
      if (hasContentType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentType());
      }
      if (hasCharset()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCharset());
      }
      if (hasContentEncoding()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getContentEncoding());
      }
      if (hasVtag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getVtag());
      }
      for (com.basho.riak.pbc.RPB.RpbLink element : getLinksList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      if (hasLastMod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getLastMod());
      }
      if (hasLastModUsecs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getLastModUsecs());
      }
      for (com.basho.riak.pbc.RPB.RpbPair element : getUsermetaList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      for (com.basho.riak.pbc.RPB.RpbPair element : getIndexesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbContent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbContent result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbContent.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbContent();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbContent internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbContent();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbContent.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbContent getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbContent.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbContent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbContent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbContent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.links_ != java.util.Collections.EMPTY_LIST) {
          result.links_ =
            java.util.Collections.unmodifiableList(result.links_);
        }
        if (result.usermeta_ != java.util.Collections.EMPTY_LIST) {
          result.usermeta_ =
            java.util.Collections.unmodifiableList(result.usermeta_);
        }
        if (result.indexes_ != java.util.Collections.EMPTY_LIST) {
          result.indexes_ =
            java.util.Collections.unmodifiableList(result.indexes_);
        }
        com.basho.riak.pbc.RPB.RpbContent returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbContent) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbContent other) {
        if (other == com.basho.riak.pbc.RPB.RpbContent.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasContentType()) {
          setContentType(other.getContentType());
        }
        if (other.hasCharset()) {
          setCharset(other.getCharset());
        }
        if (other.hasContentEncoding()) {
          setContentEncoding(other.getContentEncoding());
        }
        if (other.hasVtag()) {
          setVtag(other.getVtag());
        }
        if (!other.links_.isEmpty()) {
          if (result.links_.isEmpty()) {
            result.links_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbLink>();
          }
          result.links_.addAll(other.links_);
        }
        if (other.hasLastMod()) {
          setLastMod(other.getLastMod());
        }
        if (other.hasLastModUsecs()) {
          setLastModUsecs(other.getLastModUsecs());
        }
        if (!other.usermeta_.isEmpty()) {
          if (result.usermeta_.isEmpty()) {
            result.usermeta_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
          }
          result.usermeta_.addAll(other.usermeta_);
        }
        if (!other.indexes_.isEmpty()) {
          if (result.indexes_.isEmpty()) {
            result.indexes_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
          }
          result.indexes_.addAll(other.indexes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setValue(input.readBytes());
              break;
            }
            case 18: {
              setContentType(input.readBytes());
              break;
            }
            case 26: {
              setCharset(input.readBytes());
              break;
            }
            case 34: {
              setContentEncoding(input.readBytes());
              break;
            }
            case 42: {
              setVtag(input.readBytes());
              break;
            }
            case 50: {
              com.basho.riak.pbc.RPB.RpbLink.Builder subBuilder = com.basho.riak.pbc.RPB.RpbLink.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLinks(subBuilder.buildPartial());
              break;
            }
            case 56: {
              setLastMod(input.readUInt32());
              break;
            }
            case 64: {
              setLastModUsecs(input.readUInt32());
              break;
            }
            case 74: {
              com.basho.riak.pbc.RPB.RpbPair.Builder subBuilder = com.basho.riak.pbc.RPB.RpbPair.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUsermeta(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.basho.riak.pbc.RPB.RpbPair.Builder subBuilder = com.basho.riak.pbc.RPB.RpbPair.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIndexes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required bytes value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public com.google.protobuf.ByteString getValue() {
        return result.getValue();
      }
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // optional bytes content_type = 2;
      public boolean hasContentType() {
        return result.hasContentType();
      }
      public com.google.protobuf.ByteString getContentType() {
        return result.getContentType();
      }
      public Builder setContentType(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContentType = true;
        result.contentType_ = value;
        return this;
      }
      public Builder clearContentType() {
        result.hasContentType = false;
        result.contentType_ = getDefaultInstance().getContentType();
        return this;
      }
      
      // optional bytes charset = 3;
      public boolean hasCharset() {
        return result.hasCharset();
      }
      public com.google.protobuf.ByteString getCharset() {
        return result.getCharset();
      }
      public Builder setCharset(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCharset = true;
        result.charset_ = value;
        return this;
      }
      public Builder clearCharset() {
        result.hasCharset = false;
        result.charset_ = getDefaultInstance().getCharset();
        return this;
      }
      
      // optional bytes content_encoding = 4;
      public boolean hasContentEncoding() {
        return result.hasContentEncoding();
      }
      public com.google.protobuf.ByteString getContentEncoding() {
        return result.getContentEncoding();
      }
      public Builder setContentEncoding(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContentEncoding = true;
        result.contentEncoding_ = value;
        return this;
      }
      public Builder clearContentEncoding() {
        result.hasContentEncoding = false;
        result.contentEncoding_ = getDefaultInstance().getContentEncoding();
        return this;
      }
      
      // optional bytes vtag = 5;
      public boolean hasVtag() {
        return result.hasVtag();
      }
      public com.google.protobuf.ByteString getVtag() {
        return result.getVtag();
      }
      public Builder setVtag(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVtag = true;
        result.vtag_ = value;
        return this;
      }
      public Builder clearVtag() {
        result.hasVtag = false;
        result.vtag_ = getDefaultInstance().getVtag();
        return this;
      }
      
      // repeated .RpbLink links = 6;
      public java.util.List<com.basho.riak.pbc.RPB.RpbLink> getLinksList() {
        return java.util.Collections.unmodifiableList(result.links_);
      }
      public int getLinksCount() {
        return result.getLinksCount();
      }
      public com.basho.riak.pbc.RPB.RpbLink getLinks(int index) {
        return result.getLinks(index);
      }
      public Builder setLinks(int index, com.basho.riak.pbc.RPB.RpbLink value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.links_.set(index, value);
        return this;
      }
      public Builder setLinks(int index, com.basho.riak.pbc.RPB.RpbLink.Builder builderForValue) {
        result.links_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLinks(com.basho.riak.pbc.RPB.RpbLink value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.links_.isEmpty()) {
          result.links_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbLink>();
        }
        result.links_.add(value);
        return this;
      }
      public Builder addLinks(com.basho.riak.pbc.RPB.RpbLink.Builder builderForValue) {
        if (result.links_.isEmpty()) {
          result.links_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbLink>();
        }
        result.links_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLinks(
          java.lang.Iterable<? extends com.basho.riak.pbc.RPB.RpbLink> values) {
        if (result.links_.isEmpty()) {
          result.links_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbLink>();
        }
        super.addAll(values, result.links_);
        return this;
      }
      public Builder clearLinks() {
        result.links_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional uint32 last_mod = 7;
      public boolean hasLastMod() {
        return result.hasLastMod();
      }
      public int getLastMod() {
        return result.getLastMod();
      }
      public Builder setLastMod(int value) {
        result.hasLastMod = true;
        result.lastMod_ = value;
        return this;
      }
      public Builder clearLastMod() {
        result.hasLastMod = false;
        result.lastMod_ = 0;
        return this;
      }
      
      // optional uint32 last_mod_usecs = 8;
      public boolean hasLastModUsecs() {
        return result.hasLastModUsecs();
      }
      public int getLastModUsecs() {
        return result.getLastModUsecs();
      }
      public Builder setLastModUsecs(int value) {
        result.hasLastModUsecs = true;
        result.lastModUsecs_ = value;
        return this;
      }
      public Builder clearLastModUsecs() {
        result.hasLastModUsecs = false;
        result.lastModUsecs_ = 0;
        return this;
      }
      
      // repeated .RpbPair usermeta = 9;
      public java.util.List<com.basho.riak.pbc.RPB.RpbPair> getUsermetaList() {
        return java.util.Collections.unmodifiableList(result.usermeta_);
      }
      public int getUsermetaCount() {
        return result.getUsermetaCount();
      }
      public com.basho.riak.pbc.RPB.RpbPair getUsermeta(int index) {
        return result.getUsermeta(index);
      }
      public Builder setUsermeta(int index, com.basho.riak.pbc.RPB.RpbPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.usermeta_.set(index, value);
        return this;
      }
      public Builder setUsermeta(int index, com.basho.riak.pbc.RPB.RpbPair.Builder builderForValue) {
        result.usermeta_.set(index, builderForValue.build());
        return this;
      }
      public Builder addUsermeta(com.basho.riak.pbc.RPB.RpbPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.usermeta_.isEmpty()) {
          result.usermeta_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        result.usermeta_.add(value);
        return this;
      }
      public Builder addUsermeta(com.basho.riak.pbc.RPB.RpbPair.Builder builderForValue) {
        if (result.usermeta_.isEmpty()) {
          result.usermeta_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        result.usermeta_.add(builderForValue.build());
        return this;
      }
      public Builder addAllUsermeta(
          java.lang.Iterable<? extends com.basho.riak.pbc.RPB.RpbPair> values) {
        if (result.usermeta_.isEmpty()) {
          result.usermeta_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        super.addAll(values, result.usermeta_);
        return this;
      }
      public Builder clearUsermeta() {
        result.usermeta_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .RpbPair indexes = 10;
      public java.util.List<com.basho.riak.pbc.RPB.RpbPair> getIndexesList() {
        return java.util.Collections.unmodifiableList(result.indexes_);
      }
      public int getIndexesCount() {
        return result.getIndexesCount();
      }
      public com.basho.riak.pbc.RPB.RpbPair getIndexes(int index) {
        return result.getIndexes(index);
      }
      public Builder setIndexes(int index, com.basho.riak.pbc.RPB.RpbPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.indexes_.set(index, value);
        return this;
      }
      public Builder setIndexes(int index, com.basho.riak.pbc.RPB.RpbPair.Builder builderForValue) {
        result.indexes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIndexes(com.basho.riak.pbc.RPB.RpbPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.indexes_.isEmpty()) {
          result.indexes_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        result.indexes_.add(value);
        return this;
      }
      public Builder addIndexes(com.basho.riak.pbc.RPB.RpbPair.Builder builderForValue) {
        if (result.indexes_.isEmpty()) {
          result.indexes_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        result.indexes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIndexes(
          java.lang.Iterable<? extends com.basho.riak.pbc.RPB.RpbPair> values) {
        if (result.indexes_.isEmpty()) {
          result.indexes_ = new java.util.ArrayList<com.basho.riak.pbc.RPB.RpbPair>();
        }
        super.addAll(values, result.indexes_);
        return this;
      }
      public Builder clearIndexes() {
        result.indexes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbContent)
    }
    
    static {
      defaultInstance = new RpbContent(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbContent)
  }
  
  public static final class RpbPair extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbPair.newBuilder() to construct.
    private RpbPair() {
      initFields();
    }
    private RpbPair(boolean noInit) {}
    
    private static final RpbPair defaultInstance;
    public static RpbPair getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbPair getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPair_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbPair_fieldAccessorTable;
    }
    
    // required bytes key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional bytes value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasValue() { return hasValue; }
    public com.google.protobuf.ByteString getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasKey) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasKey()) {
        output.writeBytes(1, getKey());
      }
      if (hasValue()) {
        output.writeBytes(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKey());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbPair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbPair result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbPair.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbPair();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbPair internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbPair();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbPair.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbPair getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbPair.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbPair build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbPair buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbPair buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbPair returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbPair) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbPair other) {
        if (other == com.basho.riak.pbc.RPB.RpbPair.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setKey(input.readBytes());
              break;
            }
            case 18: {
              setValue(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes key = 1;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional bytes value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public com.google.protobuf.ByteString getValue() {
        return result.getValue();
      }
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbPair)
    }
    
    static {
      defaultInstance = new RpbPair(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbPair)
  }
  
  public static final class RpbLink extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbLink.newBuilder() to construct.
    private RpbLink() {
      initFields();
    }
    private RpbLink(boolean noInit) {}
    
    private static final RpbLink defaultInstance;
    public static RpbLink getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbLink getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbLink_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbLink_fieldAccessorTable;
    }
    
    // optional bytes bucket = 1;
    public static final int BUCKET_FIELD_NUMBER = 1;
    private boolean hasBucket;
    private com.google.protobuf.ByteString bucket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBucket() { return hasBucket; }
    public com.google.protobuf.ByteString getBucket() { return bucket_; }
    
    // optional bytes key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private boolean hasKey;
    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasKey() { return hasKey; }
    public com.google.protobuf.ByteString getKey() { return key_; }
    
    // optional bytes tag = 3;
    public static final int TAG_FIELD_NUMBER = 3;
    private boolean hasTag;
    private com.google.protobuf.ByteString tag_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTag() { return hasTag; }
    public com.google.protobuf.ByteString getTag() { return tag_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBucket()) {
        output.writeBytes(1, getBucket());
      }
      if (hasKey()) {
        output.writeBytes(2, getKey());
      }
      if (hasTag()) {
        output.writeBytes(3, getTag());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBucket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBucket());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKey());
      }
      if (hasTag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTag());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbLink prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbLink result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbLink.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbLink();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbLink internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbLink();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbLink.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbLink getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbLink.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbLink build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbLink buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbLink buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbLink returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbLink) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbLink other) {
        if (other == com.basho.riak.pbc.RPB.RpbLink.getDefaultInstance()) return this;
        if (other.hasBucket()) {
          setBucket(other.getBucket());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setBucket(input.readBytes());
              break;
            }
            case 18: {
              setKey(input.readBytes());
              break;
            }
            case 26: {
              setTag(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional bytes bucket = 1;
      public boolean hasBucket() {
        return result.hasBucket();
      }
      public com.google.protobuf.ByteString getBucket() {
        return result.getBucket();
      }
      public Builder setBucket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBucket = true;
        result.bucket_ = value;
        return this;
      }
      public Builder clearBucket() {
        result.hasBucket = false;
        result.bucket_ = getDefaultInstance().getBucket();
        return this;
      }
      
      // optional bytes key = 2;
      public boolean hasKey() {
        return result.hasKey();
      }
      public com.google.protobuf.ByteString getKey() {
        return result.getKey();
      }
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional bytes tag = 3;
      public boolean hasTag() {
        return result.hasTag();
      }
      public com.google.protobuf.ByteString getTag() {
        return result.getTag();
      }
      public Builder setTag(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTag = true;
        result.tag_ = value;
        return this;
      }
      public Builder clearTag() {
        result.hasTag = false;
        result.tag_ = getDefaultInstance().getTag();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbLink)
    }
    
    static {
      defaultInstance = new RpbLink(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbLink)
  }
  
  public static final class RpbBucketProps extends
      com.google.protobuf.GeneratedMessage {
    // Use RpbBucketProps.newBuilder() to construct.
    private RpbBucketProps() {
      initFields();
    }
    private RpbBucketProps(boolean noInit) {}
    
    private static final RpbBucketProps defaultInstance;
    public static RpbBucketProps getDefaultInstance() {
      return defaultInstance;
    }
    
    public RpbBucketProps getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.basho.riak.pbc.RPB.internal_static_RpbBucketProps_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.basho.riak.pbc.RPB.internal_static_RpbBucketProps_fieldAccessorTable;
    }
    
    // optional uint32 n_val = 1;
    public static final int N_VAL_FIELD_NUMBER = 1;
    private boolean hasNVal;
    private int nVal_ = 0;
    public boolean hasNVal() { return hasNVal; }
    public int getNVal() { return nVal_; }
    
    // optional bool allow_mult = 2;
    public static final int ALLOW_MULT_FIELD_NUMBER = 2;
    private boolean hasAllowMult;
    private boolean allowMult_ = false;
    public boolean hasAllowMult() { return hasAllowMult; }
    public boolean getAllowMult() { return allowMult_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasNVal()) {
        output.writeUInt32(1, getNVal());
      }
      if (hasAllowMult()) {
        output.writeBool(2, getAllowMult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasNVal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getNVal());
      }
      if (hasAllowMult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getAllowMult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.basho.riak.pbc.RPB.RpbBucketProps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.basho.riak.pbc.RPB.RpbBucketProps prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.basho.riak.pbc.RPB.RpbBucketProps result;
      
      // Construct using com.basho.riak.pbc.RPB.RpbBucketProps.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.basho.riak.pbc.RPB.RpbBucketProps();
        return builder;
      }
      
      protected com.basho.riak.pbc.RPB.RpbBucketProps internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.basho.riak.pbc.RPB.RpbBucketProps();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.basho.riak.pbc.RPB.RpbBucketProps.getDescriptor();
      }
      
      public com.basho.riak.pbc.RPB.RpbBucketProps getDefaultInstanceForType() {
        return com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.basho.riak.pbc.RPB.RpbBucketProps build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.basho.riak.pbc.RPB.RpbBucketProps buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.basho.riak.pbc.RPB.RpbBucketProps buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.basho.riak.pbc.RPB.RpbBucketProps returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.basho.riak.pbc.RPB.RpbBucketProps) {
          return mergeFrom((com.basho.riak.pbc.RPB.RpbBucketProps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.basho.riak.pbc.RPB.RpbBucketProps other) {
        if (other == com.basho.riak.pbc.RPB.RpbBucketProps.getDefaultInstance()) return this;
        if (other.hasNVal()) {
          setNVal(other.getNVal());
        }
        if (other.hasAllowMult()) {
          setAllowMult(other.getAllowMult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setNVal(input.readUInt32());
              break;
            }
            case 16: {
              setAllowMult(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional uint32 n_val = 1;
      public boolean hasNVal() {
        return result.hasNVal();
      }
      public int getNVal() {
        return result.getNVal();
      }
      public Builder setNVal(int value) {
        result.hasNVal = true;
        result.nVal_ = value;
        return this;
      }
      public Builder clearNVal() {
        result.hasNVal = false;
        result.nVal_ = 0;
        return this;
      }
      
      // optional bool allow_mult = 2;
      public boolean hasAllowMult() {
        return result.hasAllowMult();
      }
      public boolean getAllowMult() {
        return result.getAllowMult();
      }
      public Builder setAllowMult(boolean value) {
        result.hasAllowMult = true;
        result.allowMult_ = value;
        return this;
      }
      public Builder clearAllowMult() {
        result.hasAllowMult = false;
        result.allowMult_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RpbBucketProps)
    }
    
    static {
      defaultInstance = new RpbBucketProps(true);
      com.basho.riak.pbc.RPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RpbBucketProps)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbErrorResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbErrorResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetClientIdResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetClientIdResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbSetClientIdReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbSetClientIdReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetServerInfoResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetServerInfoResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbPutReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbPutReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbPutResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbPutResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbDelReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbDelReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbListBucketsResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbListBucketsResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbListKeysReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbListKeysReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbListKeysResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbListKeysResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetBucketReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetBucketReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbGetBucketResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbGetBucketResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbSetBucketReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbSetBucketReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbMapRedReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbMapRedReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbMapRedResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbMapRedResp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbContent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbContent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbPair_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbLink_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbLink_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RpbBucketProps_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RpbBucketProps_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024src/riakclient.proto\"/\n\014RpbErrorResp\022\016" +
      "\n\006errmsg\030\001 \002(\014\022\017\n\007errcode\030\002 \002(\r\"\'\n\022RpbGe" +
      "tClientIdResp\022\021\n\tclient_id\030\001 \002(\014\"&\n\021RpbS" +
      "etClientIdReq\022\021\n\tclient_id\030\001 \002(\014\"<\n\024RpbG" +
      "etServerInfoResp\022\014\n\004node\030\001 \001(\014\022\026\n\016server" +
      "_version\030\002 \001(\014\"\244\001\n\tRpbGetReq\022\016\n\006bucket\030\001" +
      " \002(\014\022\013\n\003key\030\002 \002(\014\022\t\n\001r\030\003 \001(\r\022\n\n\002pr\030\004 \001(\r" +
      "\022\024\n\014basic_quorum\030\005 \001(\010\022\023\n\013notfound_ok\030\006 " +
      "\001(\010\022\023\n\013if_modified\030\007 \001(\014\022\014\n\004head\030\010 \001(\010\022\025" +
      "\n\rdeletedvclock\030\t \001(\010\"M\n\nRpbGetResp\022\034\n\007c",
      "ontent\030\001 \003(\0132\013.RpbContent\022\016\n\006vclock\030\002 \001(" +
      "\014\022\021\n\tunchanged\030\003 \001(\010\"\323\001\n\tRpbPutReq\022\016\n\006bu" +
      "cket\030\001 \002(\014\022\013\n\003key\030\002 \001(\014\022\016\n\006vclock\030\003 \001(\014\022" +
      "\034\n\007content\030\004 \002(\0132\013.RpbContent\022\t\n\001w\030\005 \001(\r" +
      "\022\n\n\002dw\030\006 \001(\r\022\023\n\013return_body\030\007 \001(\010\022\n\n\002pw\030" +
      "\010 \001(\r\022\027\n\017if_not_modified\030\t \001(\010\022\025\n\rif_non" +
      "e_match\030\n \001(\010\022\023\n\013return_head\030\013 \001(\010\"G\n\nRp" +
      "bPutResp\022\034\n\007content\030\001 \003(\0132\013.RpbContent\022\016" +
      "\n\006vclock\030\002 \001(\014\022\013\n\003key\030\003 \001(\014\"~\n\tRpbDelReq" +
      "\022\016\n\006bucket\030\001 \002(\014\022\013\n\003key\030\002 \002(\014\022\n\n\002rw\030\003 \001(",
      "\r\022\016\n\006vclock\030\004 \001(\014\022\t\n\001r\030\005 \001(\r\022\t\n\001w\030\006 \001(\r\022" +
      "\n\n\002pr\030\007 \001(\r\022\n\n\002pw\030\010 \001(\r\022\n\n\002dw\030\t \001(\r\"%\n\022R" +
      "pbListBucketsResp\022\017\n\007buckets\030\001 \003(\014\" \n\016Rp" +
      "bListKeysReq\022\016\n\006bucket\030\001 \002(\014\"-\n\017RpbListK" +
      "eysResp\022\014\n\004keys\030\001 \003(\014\022\014\n\004done\030\002 \001(\010\"!\n\017R" +
      "pbGetBucketReq\022\016\n\006bucket\030\001 \002(\014\"2\n\020RpbGet" +
      "BucketResp\022\036\n\005props\030\001 \002(\0132\017.RpbBucketPro" +
      "ps\"A\n\017RpbSetBucketReq\022\016\n\006bucket\030\001 \002(\014\022\036\n" +
      "\005props\030\002 \002(\0132\017.RpbBucketProps\"5\n\014RpbMapR" +
      "edReq\022\017\n\007request\030\001 \002(\014\022\024\n\014content_type\030\002",
      " \002(\014\">\n\rRpbMapRedResp\022\r\n\005phase\030\001 \001(\r\022\020\n\010" +
      "response\030\002 \001(\014\022\014\n\004done\030\003 \001(\010\"\344\001\n\nRpbCont" +
      "ent\022\r\n\005value\030\001 \002(\014\022\024\n\014content_type\030\002 \001(\014" +
      "\022\017\n\007charset\030\003 \001(\014\022\030\n\020content_encoding\030\004 " +
      "\001(\014\022\014\n\004vtag\030\005 \001(\014\022\027\n\005links\030\006 \003(\0132\010.RpbLi" +
      "nk\022\020\n\010last_mod\030\007 \001(\r\022\026\n\016last_mod_usecs\030\010" +
      " \001(\r\022\032\n\010usermeta\030\t \003(\0132\010.RpbPair\022\031\n\007inde" +
      "xes\030\n \003(\0132\010.RpbPair\"%\n\007RpbPair\022\013\n\003key\030\001 " +
      "\002(\014\022\r\n\005value\030\002 \001(\014\"3\n\007RpbLink\022\016\n\006bucket\030" +
      "\001 \001(\014\022\013\n\003key\030\002 \001(\014\022\013\n\003tag\030\003 \001(\014\"3\n\016RpbBu",
      "cketProps\022\r\n\005n_val\030\001 \001(\r\022\022\n\nallow_mult\030\002" +
      " \001(\010B\031\n\022com.basho.riak.pbcB\003RPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RpbErrorResp_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RpbErrorResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbErrorResp_descriptor,
              new java.lang.String[] { "Errmsg", "Errcode", },
              com.basho.riak.pbc.RPB.RpbErrorResp.class,
              com.basho.riak.pbc.RPB.RpbErrorResp.Builder.class);
          internal_static_RpbGetClientIdResp_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_RpbGetClientIdResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetClientIdResp_descriptor,
              new java.lang.String[] { "ClientId", },
              com.basho.riak.pbc.RPB.RpbGetClientIdResp.class,
              com.basho.riak.pbc.RPB.RpbGetClientIdResp.Builder.class);
          internal_static_RpbSetClientIdReq_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_RpbSetClientIdReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbSetClientIdReq_descriptor,
              new java.lang.String[] { "ClientId", },
              com.basho.riak.pbc.RPB.RpbSetClientIdReq.class,
              com.basho.riak.pbc.RPB.RpbSetClientIdReq.Builder.class);
          internal_static_RpbGetServerInfoResp_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_RpbGetServerInfoResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetServerInfoResp_descriptor,
              new java.lang.String[] { "Node", "ServerVersion", },
              com.basho.riak.pbc.RPB.RpbGetServerInfoResp.class,
              com.basho.riak.pbc.RPB.RpbGetServerInfoResp.Builder.class);
          internal_static_RpbGetReq_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_RpbGetReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetReq_descriptor,
              new java.lang.String[] { "Bucket", "Key", "R", "Pr", "BasicQuorum", "NotfoundOk", "IfModified", "Head", "Deletedvclock", },
              com.basho.riak.pbc.RPB.RpbGetReq.class,
              com.basho.riak.pbc.RPB.RpbGetReq.Builder.class);
          internal_static_RpbGetResp_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_RpbGetResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetResp_descriptor,
              new java.lang.String[] { "Content", "Vclock", "Unchanged", },
              com.basho.riak.pbc.RPB.RpbGetResp.class,
              com.basho.riak.pbc.RPB.RpbGetResp.Builder.class);
          internal_static_RpbPutReq_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_RpbPutReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbPutReq_descriptor,
              new java.lang.String[] { "Bucket", "Key", "Vclock", "Content", "W", "Dw", "ReturnBody", "Pw", "IfNotModified", "IfNoneMatch", "ReturnHead", },
              com.basho.riak.pbc.RPB.RpbPutReq.class,
              com.basho.riak.pbc.RPB.RpbPutReq.Builder.class);
          internal_static_RpbPutResp_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_RpbPutResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbPutResp_descriptor,
              new java.lang.String[] { "Content", "Vclock", "Key", },
              com.basho.riak.pbc.RPB.RpbPutResp.class,
              com.basho.riak.pbc.RPB.RpbPutResp.Builder.class);
          internal_static_RpbDelReq_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_RpbDelReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbDelReq_descriptor,
              new java.lang.String[] { "Bucket", "Key", "Rw", "Vclock", "R", "W", "Pr", "Pw", "Dw", },
              com.basho.riak.pbc.RPB.RpbDelReq.class,
              com.basho.riak.pbc.RPB.RpbDelReq.Builder.class);
          internal_static_RpbListBucketsResp_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_RpbListBucketsResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbListBucketsResp_descriptor,
              new java.lang.String[] { "Buckets", },
              com.basho.riak.pbc.RPB.RpbListBucketsResp.class,
              com.basho.riak.pbc.RPB.RpbListBucketsResp.Builder.class);
          internal_static_RpbListKeysReq_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_RpbListKeysReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbListKeysReq_descriptor,
              new java.lang.String[] { "Bucket", },
              com.basho.riak.pbc.RPB.RpbListKeysReq.class,
              com.basho.riak.pbc.RPB.RpbListKeysReq.Builder.class);
          internal_static_RpbListKeysResp_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_RpbListKeysResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbListKeysResp_descriptor,
              new java.lang.String[] { "Keys", "Done", },
              com.basho.riak.pbc.RPB.RpbListKeysResp.class,
              com.basho.riak.pbc.RPB.RpbListKeysResp.Builder.class);
          internal_static_RpbGetBucketReq_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_RpbGetBucketReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetBucketReq_descriptor,
              new java.lang.String[] { "Bucket", },
              com.basho.riak.pbc.RPB.RpbGetBucketReq.class,
              com.basho.riak.pbc.RPB.RpbGetBucketReq.Builder.class);
          internal_static_RpbGetBucketResp_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_RpbGetBucketResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbGetBucketResp_descriptor,
              new java.lang.String[] { "Props", },
              com.basho.riak.pbc.RPB.RpbGetBucketResp.class,
              com.basho.riak.pbc.RPB.RpbGetBucketResp.Builder.class);
          internal_static_RpbSetBucketReq_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_RpbSetBucketReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbSetBucketReq_descriptor,
              new java.lang.String[] { "Bucket", "Props", },
              com.basho.riak.pbc.RPB.RpbSetBucketReq.class,
              com.basho.riak.pbc.RPB.RpbSetBucketReq.Builder.class);
          internal_static_RpbMapRedReq_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_RpbMapRedReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbMapRedReq_descriptor,
              new java.lang.String[] { "Request", "ContentType", },
              com.basho.riak.pbc.RPB.RpbMapRedReq.class,
              com.basho.riak.pbc.RPB.RpbMapRedReq.Builder.class);
          internal_static_RpbMapRedResp_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_RpbMapRedResp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbMapRedResp_descriptor,
              new java.lang.String[] { "Phase", "Response", "Done", },
              com.basho.riak.pbc.RPB.RpbMapRedResp.class,
              com.basho.riak.pbc.RPB.RpbMapRedResp.Builder.class);
          internal_static_RpbContent_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_RpbContent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbContent_descriptor,
              new java.lang.String[] { "Value", "ContentType", "Charset", "ContentEncoding", "Vtag", "Links", "LastMod", "LastModUsecs", "Usermeta", "Indexes", },
              com.basho.riak.pbc.RPB.RpbContent.class,
              com.basho.riak.pbc.RPB.RpbContent.Builder.class);
          internal_static_RpbPair_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_RpbPair_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbPair_descriptor,
              new java.lang.String[] { "Key", "Value", },
              com.basho.riak.pbc.RPB.RpbPair.class,
              com.basho.riak.pbc.RPB.RpbPair.Builder.class);
          internal_static_RpbLink_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_RpbLink_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbLink_descriptor,
              new java.lang.String[] { "Bucket", "Key", "Tag", },
              com.basho.riak.pbc.RPB.RpbLink.class,
              com.basho.riak.pbc.RPB.RpbLink.Builder.class);
          internal_static_RpbBucketProps_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_RpbBucketProps_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RpbBucketProps_descriptor,
              new java.lang.String[] { "NVal", "AllowMult", },
              com.basho.riak.pbc.RPB.RpbBucketProps.class,
              com.basho.riak.pbc.RPB.RpbBucketProps.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
